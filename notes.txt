cmake --build build
.\build\Debug\CGHomework.exe > Results\image.ppm		->  save image


Ray = P(t) = A + tB 
t - ray parameter (double) (оддалеченост од A),  A - ray origin (t=0), b - ray direction


1. Calculate the ray from the “eye” through the pixel,
2. Determine which objects the ray intersects, and
3. Compute a color for the closest intersection point.

Hit Spahere and Shadding
	X,Y,Z axis
	x - max, y - min -> red
	x - min, y - max -> green
	x - min, y - min -> blue
	x - min, y - min -> blue
	x - max, y - max -> brigtes (white)


Multiple spheres - важна е само таа најблиску до камерата (smalleset t-value)
Зракот оде до секој пиксе, според нормалата на зракот со пикселот кој го удира се определува бојата

Intervall class - real world intervasl, min and max


Antialiasing - no jaggies, avg color from 4 neighbours

Diffuse material - reflect a ray in multiple random directions
	Rejection method
	1.Generate a random vector inside of the unit sphere
	2.Normalize this vector
	3.Invert the normalized vector if it falls onto the wrong hemisphere

	100% reflection - white

	Acnee problem - caused by flaotin point nibmers - кога делото од поврпината која ја добира знакот е мнгоу мал (0.00000001)
